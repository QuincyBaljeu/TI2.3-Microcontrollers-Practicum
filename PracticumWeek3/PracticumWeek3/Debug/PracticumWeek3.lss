
PracticumWeek3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000764  000007d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000764  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000838  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000874  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a85  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000916  00000000  00000000  00001349  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003dc  00000000  00000000  00001c5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  0000203c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004a7  00000000  00000000  000020ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001ba  00000000  00000000  00002593  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  0000274d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e6       	ldi	r30, 0x64	; 100
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 30       	cpi	r26, 0x04	; 4
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	7a d0       	rcall	.+244    	; 0x1a8 <main>
  b4:	55 c3       	rjmp	.+1706   	; 0x760 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <wait>:
	writeLcd();
}

void wait( int ms )
{
	for (int i=0; i<ms; i++)
  b8:	18 16       	cp	r1, r24
  ba:	19 06       	cpc	r1, r25
  bc:	6c f4       	brge	.+26     	; 0xd8 <wait+0x20>
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c2:	ef ec       	ldi	r30, 0xCF	; 207
  c4:	f7 e0       	ldi	r31, 0x07	; 7
  c6:	31 97       	sbiw	r30, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <wait+0xe>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <wait+0x14>
  cc:	00 00       	nop
  ce:	2f 5f       	subi	r18, 0xFF	; 255
  d0:	3f 4f       	sbci	r19, 0xFF	; 255
  d2:	82 17       	cp	r24, r18
  d4:	93 07       	cpc	r25, r19
  d6:	a9 f7       	brne	.-22     	; 0xc2 <wait+0xa>
  d8:	08 95       	ret

000000da <writeLcd>:
    }	
	
}

void writeLcd() {
	PORTC |= (1<<LCD_E);
  da:	ab 9a       	sbi	0x15, 3	; 21
	wait(1);
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	eb df       	rcall	.-42     	; 0xb8 <wait>
	PORTC &= ~(1<<LCD_E);
  e2:	ab 98       	cbi	0x15, 3	; 21
	wait(1);
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	e7 cf       	rjmp	.-50     	; 0xb8 <wait>
  ea:	08 95       	ret

000000ec <init>:
}

void init() {
  ec:	cf 93       	push	r28
	// PORTC output mode and all low (also E and RS pin)
	DDRC = 0xFF;
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
  f2:	15 ba       	out	0x15, r1	; 21

	// Step 2 (table 12)
	PORTC = 0x20;	// function set
  f4:	c0 e2       	ldi	r28, 0x20	; 32
  f6:	c5 bb       	out	0x15, r28	; 21
	writeLcd();
  f8:	f0 df       	rcall	.-32     	; 0xda <writeLcd>

	// Step 3 (table 12)
	PORTC = 0x20;   // function set
	writeLcd();
  fa:	c5 bb       	out	0x15, r28	; 21
  fc:	ee df       	rcall	.-36     	; 0xda <writeLcd>
	PORTC = 0x80;
  fe:	80 e8       	ldi	r24, 0x80	; 128
	writeLcd();
 100:	85 bb       	out	0x15, r24	; 21

	// Step 4 (table 12)
	PORTC = 0x00;   // Display on/off control
 102:	eb df       	rcall	.-42     	; 0xda <writeLcd>
	writeLcd();
 104:	15 ba       	out	0x15, r1	; 21
	PORTC = 0xF0;
 106:	e9 df       	rcall	.-46     	; 0xda <writeLcd>
	writeLcd();
 108:	80 ef       	ldi	r24, 0xF0	; 240

	// Step 4 (table 12)
	PORTC = 0x00;   // Entry mode set
 10a:	85 bb       	out	0x15, r24	; 21
	writeLcd();
 10c:	e6 df       	rcall	.-52     	; 0xda <writeLcd>
 10e:	15 ba       	out	0x15, r1	; 21
	PORTC = 0x60;
 110:	e4 df       	rcall	.-56     	; 0xda <writeLcd>
 112:	80 e6       	ldi	r24, 0x60	; 96
	writeLcd();
 114:	85 bb       	out	0x15, r24	; 21
 116:	e1 df       	rcall	.-62     	; 0xda <writeLcd>
}
 118:	cf 91       	pop	r28
 11a:	08 95       	ret

0000011c <writeLcdData>:
	for(;*str; str++){
		writeLcdData(*str);
	}
}

void writeLcdData(unsigned char byte) {
 11c:	cf 93       	push	r28
 11e:	c8 2f       	mov	r28, r24
	
	PORTC = byte;
 120:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 122:	aa 9a       	sbi	0x15, 2	; 21
	writeLcd();
 124:	da df       	rcall	.-76     	; 0xda <writeLcd>

	PORTC = (byte<<4);
 126:	c2 95       	swap	r28
 128:	c0 7f       	andi	r28, 0xF0	; 240
 12a:	c5 bb       	out	0x15, r28	; 21
	PORTC |= (1<<LCD_RS);
	writeLcd();
 12c:	aa 9a       	sbi	0x15, 2	; 21
 12e:	d5 df       	rcall	.-86     	; 0xda <writeLcd>
}
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <display_text>:
	writeLcd();
	PORTC = 0x60;
	writeLcd();
}

void display_text(char *str){
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	ec 01       	movw	r28, r24
	for(;*str; str++){
 13a:	88 81       	ld	r24, Y
 13c:	88 23       	and	r24, r24
 13e:	29 f0       	breq	.+10     	; 0x14a <display_text+0x16>
 140:	21 96       	adiw	r28, 0x01	; 1
		writeLcdData(*str);
 142:	ec df       	rcall	.-40     	; 0x11c <writeLcdData>
	PORTC = 0x60;
	writeLcd();
}

void display_text(char *str){
	for(;*str; str++){
 144:	89 91       	ld	r24, Y+
 146:	81 11       	cpse	r24, r1
 148:	fc cf       	rjmp	.-8      	; 0x142 <display_text+0xe>
		writeLcdData(*str);
	}
}
 14a:	df 91       	pop	r29
 14c:	cf 91       	pop	r28
 14e:	08 95       	ret

00000150 <B1>:
{
	B1();
}

void B1()
{
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	cd b7       	in	r28, 0x3d	; 61
 156:	de b7       	in	r29, 0x3e	; 62
 158:	60 97       	sbiw	r28, 0x10	; 16
 15a:	0f b6       	in	r0, 0x3f	; 63
 15c:	f8 94       	cli
 15e:	de bf       	out	0x3e, r29	; 62
 160:	0f be       	out	0x3f, r0	; 63
 162:	cd bf       	out	0x3d, r28	; 61
    DDRD = 0b0000001;
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	81 bb       	out	0x11, r24	; 17
    TCCR2 = 0b00000111; 
 168:	87 e0       	ldi	r24, 0x07	; 7
 16a:	85 bd       	out	0x25, r24	; 37
    
    DDRB = 0b00000000; // PORTB is output
 16c:	17 ba       	out	0x17, r1	; 23
    init();
 16e:	be df       	rcall	.-132    	; 0xec <init>
    {
	    PORTD = TCNT2;
		counterIn = TCNT2;
		
		char counterString[16];
		sprintf(counterString, "%u", counterIn);
 170:	0f 2e       	mov	r0, r31
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	ef 2e       	mov	r14, r31
 176:	f1 e0       	ldi	r31, 0x01	; 1
 178:	ff 2e       	mov	r15, r31
 17a:	f0 2d       	mov	r31, r0
 17c:	8e 01       	movw	r16, r28
 17e:	0f 5f       	subi	r16, 0xFF	; 255
 180:	1f 4f       	sbci	r17, 0xFF	; 255
    
	int counterIn;
	
    while (1)
    {
	    PORTD = TCNT2;
 182:	84 b5       	in	r24, 0x24	; 36
 184:	82 bb       	out	0x12, r24	; 18
		counterIn = TCNT2;
 186:	84 b5       	in	r24, 0x24	; 36
		
		char counterString[16];
		sprintf(counterString, "%u", counterIn);
 188:	1f 92       	push	r1
 18a:	8f 93       	push	r24
 18c:	ff 92       	push	r15
 18e:	ef 92       	push	r14
 190:	1f 93       	push	r17
 192:	0f 93       	push	r16
 194:	0a d0       	rcall	.+20     	; 0x1aa <sprintf>
		
		display_text(counterString);
 196:	c8 01       	movw	r24, r16
 198:	cd df       	rcall	.-102    	; 0x134 <display_text>
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	0f 90       	pop	r0
 1a0:	0f 90       	pop	r0
 1a2:	0f 90       	pop	r0
 1a4:	0f 90       	pop	r0
 1a6:	ed cf       	rjmp	.-38     	; 0x182 <B1+0x32>

000001a8 <main>:
 1a8:	d3 df       	rcall	.-90     	; 0x150 <B1>

000001aa <sprintf>:
 1aa:	0f 93       	push	r16
 1ac:	1f 93       	push	r17
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
 1b2:	cd b7       	in	r28, 0x3d	; 61
 1b4:	de b7       	in	r29, 0x3e	; 62
 1b6:	2e 97       	sbiw	r28, 0x0e	; 14
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	f8 94       	cli
 1bc:	de bf       	out	0x3e, r29	; 62
 1be:	0f be       	out	0x3f, r0	; 63
 1c0:	cd bf       	out	0x3d, r28	; 61
 1c2:	0d 89       	ldd	r16, Y+21	; 0x15
 1c4:	1e 89       	ldd	r17, Y+22	; 0x16
 1c6:	86 e0       	ldi	r24, 0x06	; 6
 1c8:	8c 83       	std	Y+4, r24	; 0x04
 1ca:	1a 83       	std	Y+2, r17	; 0x02
 1cc:	09 83       	std	Y+1, r16	; 0x01
 1ce:	8f ef       	ldi	r24, 0xFF	; 255
 1d0:	9f e7       	ldi	r25, 0x7F	; 127
 1d2:	9e 83       	std	Y+6, r25	; 0x06
 1d4:	8d 83       	std	Y+5, r24	; 0x05
 1d6:	ae 01       	movw	r20, r28
 1d8:	47 5e       	subi	r20, 0xE7	; 231
 1da:	5f 4f       	sbci	r21, 0xFF	; 255
 1dc:	6f 89       	ldd	r22, Y+23	; 0x17
 1de:	78 8d       	ldd	r23, Y+24	; 0x18
 1e0:	ce 01       	movw	r24, r28
 1e2:	01 96       	adiw	r24, 0x01	; 1
 1e4:	10 d0       	rcall	.+32     	; 0x206 <vfprintf>
 1e6:	ef 81       	ldd	r30, Y+7	; 0x07
 1e8:	f8 85       	ldd	r31, Y+8	; 0x08
 1ea:	e0 0f       	add	r30, r16
 1ec:	f1 1f       	adc	r31, r17
 1ee:	10 82       	st	Z, r1
 1f0:	2e 96       	adiw	r28, 0x0e	; 14
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	f8 94       	cli
 1f6:	de bf       	out	0x3e, r29	; 62
 1f8:	0f be       	out	0x3f, r0	; 63
 1fa:	cd bf       	out	0x3d, r28	; 61
 1fc:	df 91       	pop	r29
 1fe:	cf 91       	pop	r28
 200:	1f 91       	pop	r17
 202:	0f 91       	pop	r16
 204:	08 95       	ret

00000206 <vfprintf>:
 206:	2f 92       	push	r2
 208:	3f 92       	push	r3
 20a:	4f 92       	push	r4
 20c:	5f 92       	push	r5
 20e:	6f 92       	push	r6
 210:	7f 92       	push	r7
 212:	8f 92       	push	r8
 214:	9f 92       	push	r9
 216:	af 92       	push	r10
 218:	bf 92       	push	r11
 21a:	cf 92       	push	r12
 21c:	df 92       	push	r13
 21e:	ef 92       	push	r14
 220:	ff 92       	push	r15
 222:	0f 93       	push	r16
 224:	1f 93       	push	r17
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	cd b7       	in	r28, 0x3d	; 61
 22c:	de b7       	in	r29, 0x3e	; 62
 22e:	2b 97       	sbiw	r28, 0x0b	; 11
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	f8 94       	cli
 234:	de bf       	out	0x3e, r29	; 62
 236:	0f be       	out	0x3f, r0	; 63
 238:	cd bf       	out	0x3d, r28	; 61
 23a:	6c 01       	movw	r12, r24
 23c:	7b 01       	movw	r14, r22
 23e:	8a 01       	movw	r16, r20
 240:	fc 01       	movw	r30, r24
 242:	17 82       	std	Z+7, r1	; 0x07
 244:	16 82       	std	Z+6, r1	; 0x06
 246:	83 81       	ldd	r24, Z+3	; 0x03
 248:	81 ff       	sbrs	r24, 1
 24a:	bf c1       	rjmp	.+894    	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 24c:	ce 01       	movw	r24, r28
 24e:	01 96       	adiw	r24, 0x01	; 1
 250:	3c 01       	movw	r6, r24
 252:	f6 01       	movw	r30, r12
 254:	93 81       	ldd	r25, Z+3	; 0x03
 256:	f7 01       	movw	r30, r14
 258:	93 fd       	sbrc	r25, 3
 25a:	85 91       	lpm	r24, Z+
 25c:	93 ff       	sbrs	r25, 3
 25e:	81 91       	ld	r24, Z+
 260:	7f 01       	movw	r14, r30
 262:	88 23       	and	r24, r24
 264:	09 f4       	brne	.+2      	; 0x268 <vfprintf+0x62>
 266:	ad c1       	rjmp	.+858    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 268:	85 32       	cpi	r24, 0x25	; 37
 26a:	39 f4       	brne	.+14     	; 0x27a <vfprintf+0x74>
 26c:	93 fd       	sbrc	r25, 3
 26e:	85 91       	lpm	r24, Z+
 270:	93 ff       	sbrs	r25, 3
 272:	81 91       	ld	r24, Z+
 274:	7f 01       	movw	r14, r30
 276:	85 32       	cpi	r24, 0x25	; 37
 278:	21 f4       	brne	.+8      	; 0x282 <vfprintf+0x7c>
 27a:	b6 01       	movw	r22, r12
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	d6 d1       	rcall	.+940    	; 0x62c <fputc>
 280:	e8 cf       	rjmp	.-48     	; 0x252 <vfprintf+0x4c>
 282:	91 2c       	mov	r9, r1
 284:	21 2c       	mov	r2, r1
 286:	31 2c       	mov	r3, r1
 288:	ff e1       	ldi	r31, 0x1F	; 31
 28a:	f3 15       	cp	r31, r3
 28c:	d8 f0       	brcs	.+54     	; 0x2c4 <vfprintf+0xbe>
 28e:	8b 32       	cpi	r24, 0x2B	; 43
 290:	79 f0       	breq	.+30     	; 0x2b0 <vfprintf+0xaa>
 292:	38 f4       	brcc	.+14     	; 0x2a2 <vfprintf+0x9c>
 294:	80 32       	cpi	r24, 0x20	; 32
 296:	79 f0       	breq	.+30     	; 0x2b6 <vfprintf+0xb0>
 298:	83 32       	cpi	r24, 0x23	; 35
 29a:	a1 f4       	brne	.+40     	; 0x2c4 <vfprintf+0xbe>
 29c:	23 2d       	mov	r18, r3
 29e:	20 61       	ori	r18, 0x10	; 16
 2a0:	1d c0       	rjmp	.+58     	; 0x2dc <vfprintf+0xd6>
 2a2:	8d 32       	cpi	r24, 0x2D	; 45
 2a4:	61 f0       	breq	.+24     	; 0x2be <vfprintf+0xb8>
 2a6:	80 33       	cpi	r24, 0x30	; 48
 2a8:	69 f4       	brne	.+26     	; 0x2c4 <vfprintf+0xbe>
 2aa:	23 2d       	mov	r18, r3
 2ac:	21 60       	ori	r18, 0x01	; 1
 2ae:	16 c0       	rjmp	.+44     	; 0x2dc <vfprintf+0xd6>
 2b0:	83 2d       	mov	r24, r3
 2b2:	82 60       	ori	r24, 0x02	; 2
 2b4:	38 2e       	mov	r3, r24
 2b6:	e3 2d       	mov	r30, r3
 2b8:	e4 60       	ori	r30, 0x04	; 4
 2ba:	3e 2e       	mov	r3, r30
 2bc:	2a c0       	rjmp	.+84     	; 0x312 <vfprintf+0x10c>
 2be:	f3 2d       	mov	r31, r3
 2c0:	f8 60       	ori	r31, 0x08	; 8
 2c2:	1d c0       	rjmp	.+58     	; 0x2fe <vfprintf+0xf8>
 2c4:	37 fc       	sbrc	r3, 7
 2c6:	2d c0       	rjmp	.+90     	; 0x322 <vfprintf+0x11c>
 2c8:	20 ed       	ldi	r18, 0xD0	; 208
 2ca:	28 0f       	add	r18, r24
 2cc:	2a 30       	cpi	r18, 0x0A	; 10
 2ce:	40 f0       	brcs	.+16     	; 0x2e0 <vfprintf+0xda>
 2d0:	8e 32       	cpi	r24, 0x2E	; 46
 2d2:	b9 f4       	brne	.+46     	; 0x302 <vfprintf+0xfc>
 2d4:	36 fc       	sbrc	r3, 6
 2d6:	75 c1       	rjmp	.+746    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 2d8:	23 2d       	mov	r18, r3
 2da:	20 64       	ori	r18, 0x40	; 64
 2dc:	32 2e       	mov	r3, r18
 2de:	19 c0       	rjmp	.+50     	; 0x312 <vfprintf+0x10c>
 2e0:	36 fe       	sbrs	r3, 6
 2e2:	06 c0       	rjmp	.+12     	; 0x2f0 <vfprintf+0xea>
 2e4:	8a e0       	ldi	r24, 0x0A	; 10
 2e6:	98 9e       	mul	r9, r24
 2e8:	20 0d       	add	r18, r0
 2ea:	11 24       	eor	r1, r1
 2ec:	92 2e       	mov	r9, r18
 2ee:	11 c0       	rjmp	.+34     	; 0x312 <vfprintf+0x10c>
 2f0:	ea e0       	ldi	r30, 0x0A	; 10
 2f2:	2e 9e       	mul	r2, r30
 2f4:	20 0d       	add	r18, r0
 2f6:	11 24       	eor	r1, r1
 2f8:	22 2e       	mov	r2, r18
 2fa:	f3 2d       	mov	r31, r3
 2fc:	f0 62       	ori	r31, 0x20	; 32
 2fe:	3f 2e       	mov	r3, r31
 300:	08 c0       	rjmp	.+16     	; 0x312 <vfprintf+0x10c>
 302:	8c 36       	cpi	r24, 0x6C	; 108
 304:	21 f4       	brne	.+8      	; 0x30e <vfprintf+0x108>
 306:	83 2d       	mov	r24, r3
 308:	80 68       	ori	r24, 0x80	; 128
 30a:	38 2e       	mov	r3, r24
 30c:	02 c0       	rjmp	.+4      	; 0x312 <vfprintf+0x10c>
 30e:	88 36       	cpi	r24, 0x68	; 104
 310:	41 f4       	brne	.+16     	; 0x322 <vfprintf+0x11c>
 312:	f7 01       	movw	r30, r14
 314:	93 fd       	sbrc	r25, 3
 316:	85 91       	lpm	r24, Z+
 318:	93 ff       	sbrs	r25, 3
 31a:	81 91       	ld	r24, Z+
 31c:	7f 01       	movw	r14, r30
 31e:	81 11       	cpse	r24, r1
 320:	b3 cf       	rjmp	.-154    	; 0x288 <vfprintf+0x82>
 322:	98 2f       	mov	r25, r24
 324:	9f 7d       	andi	r25, 0xDF	; 223
 326:	95 54       	subi	r25, 0x45	; 69
 328:	93 30       	cpi	r25, 0x03	; 3
 32a:	28 f4       	brcc	.+10     	; 0x336 <vfprintf+0x130>
 32c:	0c 5f       	subi	r16, 0xFC	; 252
 32e:	1f 4f       	sbci	r17, 0xFF	; 255
 330:	9f e3       	ldi	r25, 0x3F	; 63
 332:	99 83       	std	Y+1, r25	; 0x01
 334:	0d c0       	rjmp	.+26     	; 0x350 <vfprintf+0x14a>
 336:	83 36       	cpi	r24, 0x63	; 99
 338:	31 f0       	breq	.+12     	; 0x346 <vfprintf+0x140>
 33a:	83 37       	cpi	r24, 0x73	; 115
 33c:	71 f0       	breq	.+28     	; 0x35a <vfprintf+0x154>
 33e:	83 35       	cpi	r24, 0x53	; 83
 340:	09 f0       	breq	.+2      	; 0x344 <vfprintf+0x13e>
 342:	55 c0       	rjmp	.+170    	; 0x3ee <vfprintf+0x1e8>
 344:	20 c0       	rjmp	.+64     	; 0x386 <vfprintf+0x180>
 346:	f8 01       	movw	r30, r16
 348:	80 81       	ld	r24, Z
 34a:	89 83       	std	Y+1, r24	; 0x01
 34c:	0e 5f       	subi	r16, 0xFE	; 254
 34e:	1f 4f       	sbci	r17, 0xFF	; 255
 350:	88 24       	eor	r8, r8
 352:	83 94       	inc	r8
 354:	91 2c       	mov	r9, r1
 356:	53 01       	movw	r10, r6
 358:	12 c0       	rjmp	.+36     	; 0x37e <vfprintf+0x178>
 35a:	28 01       	movw	r4, r16
 35c:	f2 e0       	ldi	r31, 0x02	; 2
 35e:	4f 0e       	add	r4, r31
 360:	51 1c       	adc	r5, r1
 362:	f8 01       	movw	r30, r16
 364:	a0 80       	ld	r10, Z
 366:	b1 80       	ldd	r11, Z+1	; 0x01
 368:	36 fe       	sbrs	r3, 6
 36a:	03 c0       	rjmp	.+6      	; 0x372 <vfprintf+0x16c>
 36c:	69 2d       	mov	r22, r9
 36e:	70 e0       	ldi	r23, 0x00	; 0
 370:	02 c0       	rjmp	.+4      	; 0x376 <vfprintf+0x170>
 372:	6f ef       	ldi	r22, 0xFF	; 255
 374:	7f ef       	ldi	r23, 0xFF	; 255
 376:	c5 01       	movw	r24, r10
 378:	4e d1       	rcall	.+668    	; 0x616 <strnlen>
 37a:	4c 01       	movw	r8, r24
 37c:	82 01       	movw	r16, r4
 37e:	f3 2d       	mov	r31, r3
 380:	ff 77       	andi	r31, 0x7F	; 127
 382:	3f 2e       	mov	r3, r31
 384:	15 c0       	rjmp	.+42     	; 0x3b0 <vfprintf+0x1aa>
 386:	28 01       	movw	r4, r16
 388:	22 e0       	ldi	r18, 0x02	; 2
 38a:	42 0e       	add	r4, r18
 38c:	51 1c       	adc	r5, r1
 38e:	f8 01       	movw	r30, r16
 390:	a0 80       	ld	r10, Z
 392:	b1 80       	ldd	r11, Z+1	; 0x01
 394:	36 fe       	sbrs	r3, 6
 396:	03 c0       	rjmp	.+6      	; 0x39e <vfprintf+0x198>
 398:	69 2d       	mov	r22, r9
 39a:	70 e0       	ldi	r23, 0x00	; 0
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <vfprintf+0x19c>
 39e:	6f ef       	ldi	r22, 0xFF	; 255
 3a0:	7f ef       	ldi	r23, 0xFF	; 255
 3a2:	c5 01       	movw	r24, r10
 3a4:	2d d1       	rcall	.+602    	; 0x600 <strnlen_P>
 3a6:	4c 01       	movw	r8, r24
 3a8:	f3 2d       	mov	r31, r3
 3aa:	f0 68       	ori	r31, 0x80	; 128
 3ac:	3f 2e       	mov	r3, r31
 3ae:	82 01       	movw	r16, r4
 3b0:	33 fc       	sbrc	r3, 3
 3b2:	19 c0       	rjmp	.+50     	; 0x3e6 <vfprintf+0x1e0>
 3b4:	82 2d       	mov	r24, r2
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	88 16       	cp	r8, r24
 3ba:	99 06       	cpc	r9, r25
 3bc:	a0 f4       	brcc	.+40     	; 0x3e6 <vfprintf+0x1e0>
 3be:	b6 01       	movw	r22, r12
 3c0:	80 e2       	ldi	r24, 0x20	; 32
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	33 d1       	rcall	.+614    	; 0x62c <fputc>
 3c6:	2a 94       	dec	r2
 3c8:	f5 cf       	rjmp	.-22     	; 0x3b4 <vfprintf+0x1ae>
 3ca:	f5 01       	movw	r30, r10
 3cc:	37 fc       	sbrc	r3, 7
 3ce:	85 91       	lpm	r24, Z+
 3d0:	37 fe       	sbrs	r3, 7
 3d2:	81 91       	ld	r24, Z+
 3d4:	5f 01       	movw	r10, r30
 3d6:	b6 01       	movw	r22, r12
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	28 d1       	rcall	.+592    	; 0x62c <fputc>
 3dc:	21 10       	cpse	r2, r1
 3de:	2a 94       	dec	r2
 3e0:	21 e0       	ldi	r18, 0x01	; 1
 3e2:	82 1a       	sub	r8, r18
 3e4:	91 08       	sbc	r9, r1
 3e6:	81 14       	cp	r8, r1
 3e8:	91 04       	cpc	r9, r1
 3ea:	79 f7       	brne	.-34     	; 0x3ca <vfprintf+0x1c4>
 3ec:	e1 c0       	rjmp	.+450    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 3ee:	84 36       	cpi	r24, 0x64	; 100
 3f0:	11 f0       	breq	.+4      	; 0x3f6 <vfprintf+0x1f0>
 3f2:	89 36       	cpi	r24, 0x69	; 105
 3f4:	39 f5       	brne	.+78     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 3f6:	f8 01       	movw	r30, r16
 3f8:	37 fe       	sbrs	r3, 7
 3fa:	07 c0       	rjmp	.+14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fc:	60 81       	ld	r22, Z
 3fe:	71 81       	ldd	r23, Z+1	; 0x01
 400:	82 81       	ldd	r24, Z+2	; 0x02
 402:	93 81       	ldd	r25, Z+3	; 0x03
 404:	0c 5f       	subi	r16, 0xFC	; 252
 406:	1f 4f       	sbci	r17, 0xFF	; 255
 408:	08 c0       	rjmp	.+16     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40a:	60 81       	ld	r22, Z
 40c:	71 81       	ldd	r23, Z+1	; 0x01
 40e:	07 2e       	mov	r0, r23
 410:	00 0c       	add	r0, r0
 412:	88 0b       	sbc	r24, r24
 414:	99 0b       	sbc	r25, r25
 416:	0e 5f       	subi	r16, 0xFE	; 254
 418:	1f 4f       	sbci	r17, 0xFF	; 255
 41a:	f3 2d       	mov	r31, r3
 41c:	ff 76       	andi	r31, 0x6F	; 111
 41e:	3f 2e       	mov	r3, r31
 420:	97 ff       	sbrs	r25, 7
 422:	09 c0       	rjmp	.+18     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 424:	90 95       	com	r25
 426:	80 95       	com	r24
 428:	70 95       	com	r23
 42a:	61 95       	neg	r22
 42c:	7f 4f       	sbci	r23, 0xFF	; 255
 42e:	8f 4f       	sbci	r24, 0xFF	; 255
 430:	9f 4f       	sbci	r25, 0xFF	; 255
 432:	f0 68       	ori	r31, 0x80	; 128
 434:	3f 2e       	mov	r3, r31
 436:	2a e0       	ldi	r18, 0x0A	; 10
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	a3 01       	movw	r20, r6
 43c:	33 d1       	rcall	.+614    	; 0x6a4 <__ultoa_invert>
 43e:	88 2e       	mov	r8, r24
 440:	86 18       	sub	r8, r6
 442:	44 c0       	rjmp	.+136    	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 444:	85 37       	cpi	r24, 0x75	; 117
 446:	31 f4       	brne	.+12     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 448:	23 2d       	mov	r18, r3
 44a:	2f 7e       	andi	r18, 0xEF	; 239
 44c:	b2 2e       	mov	r11, r18
 44e:	2a e0       	ldi	r18, 0x0A	; 10
 450:	30 e0       	ldi	r19, 0x00	; 0
 452:	25 c0       	rjmp	.+74     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 454:	93 2d       	mov	r25, r3
 456:	99 7f       	andi	r25, 0xF9	; 249
 458:	b9 2e       	mov	r11, r25
 45a:	8f 36       	cpi	r24, 0x6F	; 111
 45c:	c1 f0       	breq	.+48     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 45e:	18 f4       	brcc	.+6      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 460:	88 35       	cpi	r24, 0x58	; 88
 462:	79 f0       	breq	.+30     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 464:	ae c0       	rjmp	.+348    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 466:	80 37       	cpi	r24, 0x70	; 112
 468:	19 f0       	breq	.+6      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 46a:	88 37       	cpi	r24, 0x78	; 120
 46c:	21 f0       	breq	.+8      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 46e:	a9 c0       	rjmp	.+338    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 470:	e9 2f       	mov	r30, r25
 472:	e0 61       	ori	r30, 0x10	; 16
 474:	be 2e       	mov	r11, r30
 476:	b4 fe       	sbrs	r11, 4
 478:	0d c0       	rjmp	.+26     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 47a:	fb 2d       	mov	r31, r11
 47c:	f4 60       	ori	r31, 0x04	; 4
 47e:	bf 2e       	mov	r11, r31
 480:	09 c0       	rjmp	.+18     	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 482:	34 fe       	sbrs	r3, 4
 484:	0a c0       	rjmp	.+20     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 486:	29 2f       	mov	r18, r25
 488:	26 60       	ori	r18, 0x06	; 6
 48a:	b2 2e       	mov	r11, r18
 48c:	06 c0       	rjmp	.+12     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 48e:	28 e0       	ldi	r18, 0x08	; 8
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	05 c0       	rjmp	.+10     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 494:	20 e1       	ldi	r18, 0x10	; 16
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	02 c0       	rjmp	.+4      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 49a:	20 e1       	ldi	r18, 0x10	; 16
 49c:	32 e0       	ldi	r19, 0x02	; 2
 49e:	f8 01       	movw	r30, r16
 4a0:	b7 fe       	sbrs	r11, 7
 4a2:	07 c0       	rjmp	.+14     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a4:	60 81       	ld	r22, Z
 4a6:	71 81       	ldd	r23, Z+1	; 0x01
 4a8:	82 81       	ldd	r24, Z+2	; 0x02
 4aa:	93 81       	ldd	r25, Z+3	; 0x03
 4ac:	0c 5f       	subi	r16, 0xFC	; 252
 4ae:	1f 4f       	sbci	r17, 0xFF	; 255
 4b0:	06 c0       	rjmp	.+12     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
 4b2:	60 81       	ld	r22, Z
 4b4:	71 81       	ldd	r23, Z+1	; 0x01
 4b6:	80 e0       	ldi	r24, 0x00	; 0
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	0e 5f       	subi	r16, 0xFE	; 254
 4bc:	1f 4f       	sbci	r17, 0xFF	; 255
 4be:	a3 01       	movw	r20, r6
 4c0:	f1 d0       	rcall	.+482    	; 0x6a4 <__ultoa_invert>
 4c2:	88 2e       	mov	r8, r24
 4c4:	86 18       	sub	r8, r6
 4c6:	fb 2d       	mov	r31, r11
 4c8:	ff 77       	andi	r31, 0x7F	; 127
 4ca:	3f 2e       	mov	r3, r31
 4cc:	36 fe       	sbrs	r3, 6
 4ce:	0d c0       	rjmp	.+26     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4d0:	23 2d       	mov	r18, r3
 4d2:	2e 7f       	andi	r18, 0xFE	; 254
 4d4:	a2 2e       	mov	r10, r18
 4d6:	89 14       	cp	r8, r9
 4d8:	58 f4       	brcc	.+22     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4da:	34 fe       	sbrs	r3, 4
 4dc:	0b c0       	rjmp	.+22     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4de:	32 fc       	sbrc	r3, 2
 4e0:	09 c0       	rjmp	.+18     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4e2:	83 2d       	mov	r24, r3
 4e4:	8e 7e       	andi	r24, 0xEE	; 238
 4e6:	a8 2e       	mov	r10, r24
 4e8:	05 c0       	rjmp	.+10     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4ea:	b8 2c       	mov	r11, r8
 4ec:	a3 2c       	mov	r10, r3
 4ee:	03 c0       	rjmp	.+6      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f0:	b8 2c       	mov	r11, r8
 4f2:	01 c0       	rjmp	.+2      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f4:	b9 2c       	mov	r11, r9
 4f6:	a4 fe       	sbrs	r10, 4
 4f8:	0f c0       	rjmp	.+30     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4fa:	fe 01       	movw	r30, r28
 4fc:	e8 0d       	add	r30, r8
 4fe:	f1 1d       	adc	r31, r1
 500:	80 81       	ld	r24, Z
 502:	80 33       	cpi	r24, 0x30	; 48
 504:	21 f4       	brne	.+8      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 506:	9a 2d       	mov	r25, r10
 508:	99 7e       	andi	r25, 0xE9	; 233
 50a:	a9 2e       	mov	r10, r25
 50c:	09 c0       	rjmp	.+18     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 50e:	a2 fe       	sbrs	r10, 2
 510:	06 c0       	rjmp	.+12     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 512:	b3 94       	inc	r11
 514:	b3 94       	inc	r11
 516:	04 c0       	rjmp	.+8      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 518:	8a 2d       	mov	r24, r10
 51a:	86 78       	andi	r24, 0x86	; 134
 51c:	09 f0       	breq	.+2      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 51e:	b3 94       	inc	r11
 520:	a3 fc       	sbrc	r10, 3
 522:	10 c0       	rjmp	.+32     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 524:	a0 fe       	sbrs	r10, 0
 526:	06 c0       	rjmp	.+12     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 528:	b2 14       	cp	r11, r2
 52a:	80 f4       	brcc	.+32     	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 52c:	28 0c       	add	r2, r8
 52e:	92 2c       	mov	r9, r2
 530:	9b 18       	sub	r9, r11
 532:	0d c0       	rjmp	.+26     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 534:	b2 14       	cp	r11, r2
 536:	58 f4       	brcc	.+22     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 538:	b6 01       	movw	r22, r12
 53a:	80 e2       	ldi	r24, 0x20	; 32
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	76 d0       	rcall	.+236    	; 0x62c <fputc>
 540:	b3 94       	inc	r11
 542:	f8 cf       	rjmp	.-16     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 544:	b2 14       	cp	r11, r2
 546:	18 f4       	brcc	.+6      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 548:	2b 18       	sub	r2, r11
 54a:	02 c0       	rjmp	.+4      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 54c:	98 2c       	mov	r9, r8
 54e:	21 2c       	mov	r2, r1
 550:	a4 fe       	sbrs	r10, 4
 552:	0f c0       	rjmp	.+30     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 554:	b6 01       	movw	r22, r12
 556:	80 e3       	ldi	r24, 0x30	; 48
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	68 d0       	rcall	.+208    	; 0x62c <fputc>
 55c:	a2 fe       	sbrs	r10, 2
 55e:	16 c0       	rjmp	.+44     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 560:	a1 fc       	sbrc	r10, 1
 562:	03 c0       	rjmp	.+6      	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 564:	88 e7       	ldi	r24, 0x78	; 120
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	02 c0       	rjmp	.+4      	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 56a:	88 e5       	ldi	r24, 0x58	; 88
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	b6 01       	movw	r22, r12
 570:	0c c0       	rjmp	.+24     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 572:	8a 2d       	mov	r24, r10
 574:	86 78       	andi	r24, 0x86	; 134
 576:	51 f0       	breq	.+20     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 578:	a1 fe       	sbrs	r10, 1
 57a:	02 c0       	rjmp	.+4      	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 57c:	8b e2       	ldi	r24, 0x2B	; 43
 57e:	01 c0       	rjmp	.+2      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 580:	80 e2       	ldi	r24, 0x20	; 32
 582:	a7 fc       	sbrc	r10, 7
 584:	8d e2       	ldi	r24, 0x2D	; 45
 586:	b6 01       	movw	r22, r12
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	50 d0       	rcall	.+160    	; 0x62c <fputc>
 58c:	89 14       	cp	r8, r9
 58e:	30 f4       	brcc	.+12     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 590:	b6 01       	movw	r22, r12
 592:	80 e3       	ldi	r24, 0x30	; 48
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	4a d0       	rcall	.+148    	; 0x62c <fputc>
 598:	9a 94       	dec	r9
 59a:	f8 cf       	rjmp	.-16     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 59c:	8a 94       	dec	r8
 59e:	f3 01       	movw	r30, r6
 5a0:	e8 0d       	add	r30, r8
 5a2:	f1 1d       	adc	r31, r1
 5a4:	80 81       	ld	r24, Z
 5a6:	b6 01       	movw	r22, r12
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	40 d0       	rcall	.+128    	; 0x62c <fputc>
 5ac:	81 10       	cpse	r8, r1
 5ae:	f6 cf       	rjmp	.-20     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 5b0:	22 20       	and	r2, r2
 5b2:	09 f4       	brne	.+2      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5b4:	4e ce       	rjmp	.-868    	; 0x252 <vfprintf+0x4c>
 5b6:	b6 01       	movw	r22, r12
 5b8:	80 e2       	ldi	r24, 0x20	; 32
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	37 d0       	rcall	.+110    	; 0x62c <fputc>
 5be:	2a 94       	dec	r2
 5c0:	f7 cf       	rjmp	.-18     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5c2:	f6 01       	movw	r30, r12
 5c4:	86 81       	ldd	r24, Z+6	; 0x06
 5c6:	97 81       	ldd	r25, Z+7	; 0x07
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5ca:	8f ef       	ldi	r24, 0xFF	; 255
 5cc:	9f ef       	ldi	r25, 0xFF	; 255
 5ce:	2b 96       	adiw	r28, 0x0b	; 11
 5d0:	0f b6       	in	r0, 0x3f	; 63
 5d2:	f8 94       	cli
 5d4:	de bf       	out	0x3e, r29	; 62
 5d6:	0f be       	out	0x3f, r0	; 63
 5d8:	cd bf       	out	0x3d, r28	; 61
 5da:	df 91       	pop	r29
 5dc:	cf 91       	pop	r28
 5de:	1f 91       	pop	r17
 5e0:	0f 91       	pop	r16
 5e2:	ff 90       	pop	r15
 5e4:	ef 90       	pop	r14
 5e6:	df 90       	pop	r13
 5e8:	cf 90       	pop	r12
 5ea:	bf 90       	pop	r11
 5ec:	af 90       	pop	r10
 5ee:	9f 90       	pop	r9
 5f0:	8f 90       	pop	r8
 5f2:	7f 90       	pop	r7
 5f4:	6f 90       	pop	r6
 5f6:	5f 90       	pop	r5
 5f8:	4f 90       	pop	r4
 5fa:	3f 90       	pop	r3
 5fc:	2f 90       	pop	r2
 5fe:	08 95       	ret

00000600 <strnlen_P>:
 600:	fc 01       	movw	r30, r24
 602:	05 90       	lpm	r0, Z+
 604:	61 50       	subi	r22, 0x01	; 1
 606:	70 40       	sbci	r23, 0x00	; 0
 608:	01 10       	cpse	r0, r1
 60a:	d8 f7       	brcc	.-10     	; 0x602 <strnlen_P+0x2>
 60c:	80 95       	com	r24
 60e:	90 95       	com	r25
 610:	8e 0f       	add	r24, r30
 612:	9f 1f       	adc	r25, r31
 614:	08 95       	ret

00000616 <strnlen>:
 616:	fc 01       	movw	r30, r24
 618:	61 50       	subi	r22, 0x01	; 1
 61a:	70 40       	sbci	r23, 0x00	; 0
 61c:	01 90       	ld	r0, Z+
 61e:	01 10       	cpse	r0, r1
 620:	d8 f7       	brcc	.-10     	; 0x618 <strnlen+0x2>
 622:	80 95       	com	r24
 624:	90 95       	com	r25
 626:	8e 0f       	add	r24, r30
 628:	9f 1f       	adc	r25, r31
 62a:	08 95       	ret

0000062c <fputc>:
 62c:	0f 93       	push	r16
 62e:	1f 93       	push	r17
 630:	cf 93       	push	r28
 632:	df 93       	push	r29
 634:	fb 01       	movw	r30, r22
 636:	23 81       	ldd	r18, Z+3	; 0x03
 638:	21 fd       	sbrc	r18, 1
 63a:	03 c0       	rjmp	.+6      	; 0x642 <fputc+0x16>
 63c:	8f ef       	ldi	r24, 0xFF	; 255
 63e:	9f ef       	ldi	r25, 0xFF	; 255
 640:	2c c0       	rjmp	.+88     	; 0x69a <fputc+0x6e>
 642:	22 ff       	sbrs	r18, 2
 644:	16 c0       	rjmp	.+44     	; 0x672 <fputc+0x46>
 646:	46 81       	ldd	r20, Z+6	; 0x06
 648:	57 81       	ldd	r21, Z+7	; 0x07
 64a:	24 81       	ldd	r18, Z+4	; 0x04
 64c:	35 81       	ldd	r19, Z+5	; 0x05
 64e:	42 17       	cp	r20, r18
 650:	53 07       	cpc	r21, r19
 652:	44 f4       	brge	.+16     	; 0x664 <fputc+0x38>
 654:	a0 81       	ld	r26, Z
 656:	b1 81       	ldd	r27, Z+1	; 0x01
 658:	9d 01       	movw	r18, r26
 65a:	2f 5f       	subi	r18, 0xFF	; 255
 65c:	3f 4f       	sbci	r19, 0xFF	; 255
 65e:	31 83       	std	Z+1, r19	; 0x01
 660:	20 83       	st	Z, r18
 662:	8c 93       	st	X, r24
 664:	26 81       	ldd	r18, Z+6	; 0x06
 666:	37 81       	ldd	r19, Z+7	; 0x07
 668:	2f 5f       	subi	r18, 0xFF	; 255
 66a:	3f 4f       	sbci	r19, 0xFF	; 255
 66c:	37 83       	std	Z+7, r19	; 0x07
 66e:	26 83       	std	Z+6, r18	; 0x06
 670:	14 c0       	rjmp	.+40     	; 0x69a <fputc+0x6e>
 672:	8b 01       	movw	r16, r22
 674:	ec 01       	movw	r28, r24
 676:	fb 01       	movw	r30, r22
 678:	00 84       	ldd	r0, Z+8	; 0x08
 67a:	f1 85       	ldd	r31, Z+9	; 0x09
 67c:	e0 2d       	mov	r30, r0
 67e:	09 95       	icall
 680:	89 2b       	or	r24, r25
 682:	e1 f6       	brne	.-72     	; 0x63c <fputc+0x10>
 684:	d8 01       	movw	r26, r16
 686:	16 96       	adiw	r26, 0x06	; 6
 688:	8d 91       	ld	r24, X+
 68a:	9c 91       	ld	r25, X
 68c:	17 97       	sbiw	r26, 0x07	; 7
 68e:	01 96       	adiw	r24, 0x01	; 1
 690:	17 96       	adiw	r26, 0x07	; 7
 692:	9c 93       	st	X, r25
 694:	8e 93       	st	-X, r24
 696:	16 97       	sbiw	r26, 0x06	; 6
 698:	ce 01       	movw	r24, r28
 69a:	df 91       	pop	r29
 69c:	cf 91       	pop	r28
 69e:	1f 91       	pop	r17
 6a0:	0f 91       	pop	r16
 6a2:	08 95       	ret

000006a4 <__ultoa_invert>:
 6a4:	fa 01       	movw	r30, r20
 6a6:	aa 27       	eor	r26, r26
 6a8:	28 30       	cpi	r18, 0x08	; 8
 6aa:	51 f1       	breq	.+84     	; 0x700 <__ultoa_invert+0x5c>
 6ac:	20 31       	cpi	r18, 0x10	; 16
 6ae:	81 f1       	breq	.+96     	; 0x710 <__ultoa_invert+0x6c>
 6b0:	e8 94       	clt
 6b2:	6f 93       	push	r22
 6b4:	6e 7f       	andi	r22, 0xFE	; 254
 6b6:	6e 5f       	subi	r22, 0xFE	; 254
 6b8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ba:	8f 4f       	sbci	r24, 0xFF	; 255
 6bc:	9f 4f       	sbci	r25, 0xFF	; 255
 6be:	af 4f       	sbci	r26, 0xFF	; 255
 6c0:	b1 e0       	ldi	r27, 0x01	; 1
 6c2:	3e d0       	rcall	.+124    	; 0x740 <__ultoa_invert+0x9c>
 6c4:	b4 e0       	ldi	r27, 0x04	; 4
 6c6:	3c d0       	rcall	.+120    	; 0x740 <__ultoa_invert+0x9c>
 6c8:	67 0f       	add	r22, r23
 6ca:	78 1f       	adc	r23, r24
 6cc:	89 1f       	adc	r24, r25
 6ce:	9a 1f       	adc	r25, r26
 6d0:	a1 1d       	adc	r26, r1
 6d2:	68 0f       	add	r22, r24
 6d4:	79 1f       	adc	r23, r25
 6d6:	8a 1f       	adc	r24, r26
 6d8:	91 1d       	adc	r25, r1
 6da:	a1 1d       	adc	r26, r1
 6dc:	6a 0f       	add	r22, r26
 6de:	71 1d       	adc	r23, r1
 6e0:	81 1d       	adc	r24, r1
 6e2:	91 1d       	adc	r25, r1
 6e4:	a1 1d       	adc	r26, r1
 6e6:	20 d0       	rcall	.+64     	; 0x728 <__ultoa_invert+0x84>
 6e8:	09 f4       	brne	.+2      	; 0x6ec <__ultoa_invert+0x48>
 6ea:	68 94       	set
 6ec:	3f 91       	pop	r19
 6ee:	2a e0       	ldi	r18, 0x0A	; 10
 6f0:	26 9f       	mul	r18, r22
 6f2:	11 24       	eor	r1, r1
 6f4:	30 19       	sub	r19, r0
 6f6:	30 5d       	subi	r19, 0xD0	; 208
 6f8:	31 93       	st	Z+, r19
 6fa:	de f6       	brtc	.-74     	; 0x6b2 <__ultoa_invert+0xe>
 6fc:	cf 01       	movw	r24, r30
 6fe:	08 95       	ret
 700:	46 2f       	mov	r20, r22
 702:	47 70       	andi	r20, 0x07	; 7
 704:	40 5d       	subi	r20, 0xD0	; 208
 706:	41 93       	st	Z+, r20
 708:	b3 e0       	ldi	r27, 0x03	; 3
 70a:	0f d0       	rcall	.+30     	; 0x72a <__ultoa_invert+0x86>
 70c:	c9 f7       	brne	.-14     	; 0x700 <__ultoa_invert+0x5c>
 70e:	f6 cf       	rjmp	.-20     	; 0x6fc <__ultoa_invert+0x58>
 710:	46 2f       	mov	r20, r22
 712:	4f 70       	andi	r20, 0x0F	; 15
 714:	40 5d       	subi	r20, 0xD0	; 208
 716:	4a 33       	cpi	r20, 0x3A	; 58
 718:	18 f0       	brcs	.+6      	; 0x720 <__ultoa_invert+0x7c>
 71a:	49 5d       	subi	r20, 0xD9	; 217
 71c:	31 fd       	sbrc	r19, 1
 71e:	40 52       	subi	r20, 0x20	; 32
 720:	41 93       	st	Z+, r20
 722:	02 d0       	rcall	.+4      	; 0x728 <__ultoa_invert+0x84>
 724:	a9 f7       	brne	.-22     	; 0x710 <__ultoa_invert+0x6c>
 726:	ea cf       	rjmp	.-44     	; 0x6fc <__ultoa_invert+0x58>
 728:	b4 e0       	ldi	r27, 0x04	; 4
 72a:	a6 95       	lsr	r26
 72c:	97 95       	ror	r25
 72e:	87 95       	ror	r24
 730:	77 95       	ror	r23
 732:	67 95       	ror	r22
 734:	ba 95       	dec	r27
 736:	c9 f7       	brne	.-14     	; 0x72a <__ultoa_invert+0x86>
 738:	00 97       	sbiw	r24, 0x00	; 0
 73a:	61 05       	cpc	r22, r1
 73c:	71 05       	cpc	r23, r1
 73e:	08 95       	ret
 740:	9b 01       	movw	r18, r22
 742:	ac 01       	movw	r20, r24
 744:	0a 2e       	mov	r0, r26
 746:	06 94       	lsr	r0
 748:	57 95       	ror	r21
 74a:	47 95       	ror	r20
 74c:	37 95       	ror	r19
 74e:	27 95       	ror	r18
 750:	ba 95       	dec	r27
 752:	c9 f7       	brne	.-14     	; 0x746 <__ultoa_invert+0xa2>
 754:	62 0f       	add	r22, r18
 756:	73 1f       	adc	r23, r19
 758:	84 1f       	adc	r24, r20
 75a:	95 1f       	adc	r25, r21
 75c:	a0 1d       	adc	r26, r0
 75e:	08 95       	ret

00000760 <_exit>:
 760:	f8 94       	cli

00000762 <__stop_program>:
 762:	ff cf       	rjmp	.-2      	; 0x762 <__stop_program>
